let str = 'ahb acb aeb aeeb adcb axeb';
//find 'ahb', 'acb', 'aeb'
console.log(str.replace(/a.b/gi, '!'));

let str2 = 'aba aca aea abba adca abea';
//find 'abba', 'adca', 'abea'
console.log(str2.replace(/a..a/g, '!'));


let str3 = 'aba aca aea abba adca abea';
//find  'abba' и 'abea', не захватив 'adca'.
console.log(str3.replace(/ab.a/g, '!'))

///////////////////////////////////////////////////////////////////
//квантификаторы ? * +
let str4 = 'xx xax xaax xaaax xbx';
console.log(str4.replace(/xa+x/g, '!'));
console.log(str4.replace(/x*a*x/g, '!'));

let str5 = 'aa aba abba abbba abca abea';
//find 'aa', 'aba', 'abba', 'abbba' по шаблону: буква 'a', буква 'b' любое количество раз (в том числе ниодного раза), буква 'a'.
console.log(str5.replace(/ab*a/g, '!'));
//find 'aa', 'aba' по шаблону: буква 'a', буква 'b' один раз или ниодного, буква 'a'.
console.log(str5.replace(/ab?a/g, '!'));
//find  'aa', 'aba', 'abba', 'abbba', не захватив 'abca' и 'abea'.
console.log(str5.replace(/ab*a/g, '!'));

/////////////////////////////////////////////////////////////////
//группирующие скобки
let str6 = 'ab abab abab abababab abea';
//find  строка 'ab' повторяется 1 или более раз.
console.log(str6.replace(/(ab)+/g, '!'));

///////////////////////////////////////////////////////////////////
//экранировка символов через \

let str7 = 'a.a aba aea';
//find строку 'a.a', не захватив остальные.
console.log(str7.replace(/a\.a/g, '!'));

let str8 = '2+3 223 2223 2+34';
//find строку '2+3', не захватив остальные.
console.log(str8.replace(/2\+3/g, '!'));

let str9 = '23 2+3 2++3 2+++3 345 567';
//find строки '2+3', '2++3', '2+++3', не захватив остальные (+ может быть любое количество).
console.log(str9.replace(/2\++3/g, '!'));

let str10 = '23 2+3 2++3 2+++3 445 677';
//find строки '23', '2+3', '2++3', '2+++3', не захватив остальные.
console.log(str10.replace(/2\+*3/g, '!'));

let str11 = '*+ *q+ *qq+ *qqq+ *qqq qqq+';
//find  строки '*q+', '*qq+', '*qqq+', не захватив остальные.
console.log(str11.replace(/\*q+\+/g, '!'));

let str12 = '[abc] {abc} abc (abc) [abc] [s]';
//find  строки в квадратных скобках и заменят их на '!'.
console.log(str12.replace(/\[abc\]/g, '!'));

///////////////////////////////////////////////////////////////////
//фигурные скобки для указания количества повторений для элемента,после которого идут эти скобки
let str13 = 'xx xax xaax xaaax';
let res = str13.replace(/xa{1,2}x/g, '!');
console.log(res);
let str14 = 'xx xax xaax xaaax';
let res1 = str14.replace(/xa{0,3}x/g, '!');//'! ! ! !'

let str15 = 'aa aba abba abbba abbbba abbbbba';
//find  'abba', 'abbba', 'abbbba' и только их.
console.log(str15.replace(/ab{2,4}a/g, '!'));
//find 'aba', в которых 'b' встречается менее 3-х раз (включительно).
console.log(str15.replace(/ab{1,2}a/g, '!'));
//find строки вида 'aba', в которых 'b' встречается более 4-х раз (включительно).
console.log(str15.replace(/ab{4,}a/g, '!'));

////////////////////////////////////////////////////////////////////
//ограничение жадности в  регулярках с помощью оператора ?
//пример жадности,когда возвращает не то,что ожидали))
let str16 = 'aeeex zzz x kkk';
console.log(str16.replace(/a.+x/g, '!'));//'! kkk'

let str17 = 'aba accca azzza wwwwa aaa';
//find  все строки по краям которых стоят буквы 'a', и заменит каждую из них на '!'. Между буквами a может быть любой символ (кроме 'a').
console.log(str17.replace(/a.+?a/g, '!'));

///////////////////////////////////////////////////////////////////
// группы символов
//  \d - любую цифру  от 0 до 9.
//  Можно инвертировать значение команды, написав большую букву:
//   \D - все что угодно, кроме цифр
//  \s -  пробел или пробельный символ: пробел, перевод строки, табуляцию.
//  \S - все кроме пробелов
//  \w - обозначает цифру, латинскую букву или знак подчеркивания.
//  \W - все кроме букв - не буква и не цифра

let str18 = '1 12 123';
//заменить все цифры
console.log(str18.replace(/\d/g, '!'));// ! !! !!!

let str19 = '1 12 123 123abc @@@';
//заменить все числа
console.log(str19.replace(/\d+/g, '!'));// ! ! ! !abc @@@


let str20 = 'a1a a2a a3a a4a a5a aba aca';
//find строки, в которых по краям стоят буквы 'a', а между ними одна цифра.
console.log(str20.replace(/a\da/g, '!'));
let str21 = 'aa a1a a22a a333a a4444a a55555a aba aca aaa';
//find строки, в которых по краям стоят буквы 'a', а между ними любое количество цифр.
console.log(str21.replace(/a\d+a/g, '!'));
//find строки, в которых по краям стоят буквы 'a', а между ними любое количество цифр (в том числе и ноль цифр, то есть строка 'aa').
console.log(str21.replace(/a\d*a/g, '!'));
let str22 = 'avb a1b a2b a3b a4b a5b abb acb';
//find строки следующего вида: по краям стоят буквы 'a' и 'b', а между ними - не число.
console.log(str22.replace(/a\D+?b/g, '!'));
let str23 = 'ave a#b a2b a$b a4b a5b a-b acb';
//find строки следующего вида: по краям стоят буквы 'a' и 'b', а между ними - не буква и не цифра.
console.log(str23.replace(/a\Wb/g, '!'));
let str24 = 'ave a#a a2a a$a a4a a5a a-a aca';
//find которая заменит все пробелы на '!'.
console.log(str24.replace(/\s/g, '!'));

///////////////////////////////////////////////////////////////////////////////////////////////////////
//Наборы символов в регулярных выражениях JavaScript

let str25 = 'aba aea aca aza axa';
//replace по следующему шаблону: по краям стоят буквы 'a', а между ними - буква 'b', 'e' или 'x'.
console.log(str25.replace(/a[bex]a/g, '!'));
let str26 = 'a1a a3a a7a a9a aba';
//find по следующему шаблону: по краям стоят буквы 'a', а между ними - цифра от 3-х до 6-ти.
console.log(str26.replace(/a[3-6]a/g, '!'));
let str27 = 'aba aea afa aha aga';
//find по следующему шаблону: по краям стоят буквы 'a', а между ними - буква от a до g.
console.log(str27.replace(/a[a-g]a/g, '!'));
let str28 = 'aba aea afa aha aga';
//find по следующему шаблону: по краям стоят буквы 'a', а между ними - буква от a до f и от j до z.
console.log(str28.replace(/a[a-fj-z]a/g, '!'));
let str29 = 'aAXa aeffa aGha aza ax23a a3sSa';
//find по следующему шаблону: по краям стоят буквы 'a', а между ними - маленькие латинские буквы, не затронув остальных.
console.log(str29.replace(/a[a-z]+a/g, '!'));
let str30 = 'aAXa aeffa aGha aza ax23a a3sSa';
//find  по следующему шаблону: по краям стоят буквы 'a', а между ними - маленькие латинские буквы и цифры, не затронув остальных.
console.log(str30.replace(/a[a-z0-9]+a/g, '!'));

//////////////////////////////////////////////////////////////////////
//Инвертирование наборов символов в регулярках

//Напишите регулярку, которая найдет строки по шаблону: цифра '1', затем символ не 'e' и не 'x', цифра '2'.
const str31 = '1342 1e2 142 1r2'
console.log(str31.replace(/1[^ex]2/g, '!'));
//Напишите регулярку, которая найдет строки по шаблону: буква 'x', затем НЕ цифра от 2 до 7, буква 'z'.
const str32 = 'xz xez xsssz x23z';
console.log(str32.replace(/x[^2-7]+?z/, '!'));
//Напишите регулярку, которая найдет строки по шаблону: буква 'x', затем НЕ большая латинская буква от 1 и более раз, буква 'z'.
const str33 = 'xADZz xAddsz xsddz';
console.log(str33.replace(/x[^A-Z]+z/, '!'));
//Напишите регулярку, которая найдет строки по шаблону: буква 'x', затем НЕ большая маленькая латинская буква и не цифра от 1 до 5 от 1 и более раз, буква 'z'.
const str34 = 'xz xaz xAz xsssz x$z x##%%z';
console.log(str34.replace(/x[^a-zA-Z1-5]+z/, '!'));

/////////////////////////////////////////////////////////////////
//Особенности кириллицы в регулярках JavaScript
let str35 = 'wйw wяw wёw wqw'
//Напишите регулярку, которая найдет строки по шаблону: по краям стоят буквы 'w', а между ними - буква кириллицы.

console.log(str35.replace(/w[а-яё]w/g, '!'));
let str36 = 'ааа ббб ёёё ззз ййй ААА БББ ЁЁЁ ЗЗЗ ЙЙЙ';
//find все слова по шаблону: любая кириллическая буква любое количество раз.
console.log(str36.replace(/[а-яёА-ЯЁ]+/g, '!'));

//////////////////////////////////////////////////////////////
//Спецсимволы внутри квадратных скобок в JavaScript
let str37 = 'aba aea aca aza axa a.a a+a a*a';
//найдет строки 'a.a', 'a+a', 'a*a', не затронув остальных.
console.log(str37.replace(/a[.+*]a/g, '!'));
let str38 = 'xaz x.z x3z x@z x$z xrz';
// найдет строки по шаблону: буква 'x', затем НЕ точка, НЕ собака, и НЕ доллар, а потом буква 'z'.
console.log(str38.replace(/x[^.@$]z/g, '!'));

///////////////////////////////////////////////////////////////
//Группы символов внутри квадратных скобок JavaScript
const str39 = '123 #ds 1.23 34.43 asd @ya '
//Напишите регулярку, которая найдет строки по шаблону: цифра или точка от 1 и более раз.
console.log(str39.replace(/[\d.]+/g, '!'));
const str40 = 'aed 12.33 14 23@ya hello32';
//Напишите регулярку, которая найдет строки по шаблону: не цифра и не буква от 'a' до 'g' от 3 до 7 раз.
console.log(str40.replace(/[^\da-g]{3,7}/g, '!'));
console.log('123 12 1234 1345 12345'.replace(/\d{3,4}/g, '0'));

//////////////////////////////////////////////////////////////
//Спецсимволы-исключения внутри квадратных скобок
let str41 = 'x[]z x{}z x.z x()z';
// все слова по шаблону: буква 'x', затем любое количество любых скобок, затем буква 'z'.
console.log(str41.replace(/x[\[\]\{\}\(\))]+z/g, '!'));
let str42 = '[abc] {abc} abc (abc) [abc]';
//строки в любых скобках и заменят их на '!'.
console.log(str42.replace(/[\[\{\(][a-z]+[\]\}\)]/g, '!'));

////////////////////////////////////////////////////////////////
//Символ каретки внутри квадратных скобок регулярок
let str43 = '^xx axx ^zz bkk @ss';
//find строки по шаблону: шляпка или собака, а затем две латинских буквы.
console.log(str43.replace(/[@^][a-z]{2}/g, '!'));
//find строки по шаблону: НЕ шляпка и не собака, а затем две латинских буквы.
console.log(str43.replace(/[^@^][a-z]{2,3}/g, ' !'));
let str44 = '^xx axx ^zz bkk';
//find  строки по шаблону: НЕ шляпка, а затем две латинских буквы.
console.log(str44.replace(/[^\^][a-z]{3}/g, '!'));

//////////////////////////////////////////////////////////////////
//Особенности дефиса внутри квадратных скобок
let str45 = 'xaz xBz xcz x-z x@z';
// find все строки по следующему шаблону: буква 'x', большая или маленькая буква или дефис, буква 'z'.
console.log(str45.replace(/x[a-zA-z-]z/g, '!'));
let str46 = 'xaz x$z x-z xcz x+z x%z x*z';
// все строки по следующему шаблону: буква 'x', затем или доллар, или дефис или плюс, потом буква 'z'.
console.log(str46.replace(/x[$+-]z/g, '!'));

/////////////////////////////////////////////////////////////////
//Начало и конец строки в регулярках JavaScript
let str47 = 'abc def xyz';
//Напишите регулярку, которая найдет первую подстроку из букв.
console.log(str47.replace(/^[a-z]+/g, '!'));
let str48 = 'abc def xyz';
//Напишите регулярку, которая найдет последнюю подстроку из букв.
console.log(str48.replace(/[a-z]+$/g, '!'));

/////////////////////////////////////////////////////////
//Команда 'или' в регулярных выражениях JavaScript

let str49 = 'aeeea aeea aea axa axxa axxxa';
// find строки по шаблону: по краям стоят буквы 'a', а между ними - или буква 'e' любое количество раз или буква 'x' любое количество раз.
console.log(str49.replace(/a[e|x]+a/g, '!'));
//строки по шаблону: по краям стоят буквы 'a', а между ними - или буква 'e' два раза или буква 'x' любое количество раз.
console.log(str49.replace(/a(e{2}|x+)a/g, '!'));

////////////////////////////////////////////////////////////
// Метод test в регулярных выражениях JavaScript
//Определите, начинается ли переданная строка с 'http://'.
console.log(/^http:\/\//.test('http://'));
//Определите, начинается ли переданная строка с 'http://' или с 'https://'.
console.log(/^http:\/\/|^https:\/\//.test('https://'));
//Определите, что ли заканчивается переданная строка расширением 'txt', 'html' или 'php'.
console.log(/txt|html|php$/.test('adf.php'));
//Определите, что ли заканчивается переданная строка расширением 'jpg' или 'jpeg'.
console.log(/jpg|jpeg$/.test('adf.jpg'));
console.log(/jpe?g$/.test('adf.jpeg'));
//Определите, что ли заканчивается переданная строка расширением 'jpg', 'jpeg' или 'png'.
console.log(/\.jpe?g|png$/.test('adf.png'));
//Определите, является ли строка 'числом, длиной от 1 до 12 цифр'.
console.log(/^\d{1,12}$/.test('123456'));
//Определите, является ли переданная строка датой в формате год-месяц-день.
console.log(/^\d{4}-\d{2}-\d{2}$/.test('2022-12-03'))
console.log(/^(19|20)\d{2}$/.test('2023'));

/////////////////////////////////////////////////////////
//Метод match с модификатором g в JavaScript
let str50 = 'site.ru sss site.com zzz site.net';
//Получите массив доменных имен из этой строки.
console.log(str50.match(/\w{4}\.(ru|com|net)/g));
let str51 = 'a1b c34d x567z';
//Найдите сумму всех чисел этой строки.
console.log(str51.match(/\d+/g).reduce((acc, cur) => +acc + (+cur)));

//////////////////////////////////////////////////////////////
//Карманы для метода match
//Дана строка, содержащая домен:
let str52 = 'sss domain.ru zzz';
//Найдите этот домен и положите его имя в первый карман, а зону - во второй.
console.log(str52.match(/(domain)\.(ru)/));
//Дана строка, содержащая дату:
let str53 = '31.12.2025';
//Положите день в первый карман, месяц - во второй, а год - в третий.
console.log(str53.match(/(\d{2})\.(\d{2})\.(\d{4})/));

///////////////////////////////////////////////////////////////
//Карманы в методе replace в регулярках JavaScript
//Дана строка:
let str54 = '12 34 56 78';
//Поменяйте местами цифры во всех двухзначных числах.
console.log(str54.replace(/(\d)(\d)/g, '$2$1'));
//Дана строка с датой:
let str55 = '31.12.2025';
//Преобразуйте эту дату в '2025.12.31'.
console.log(str55.replace(/(\d{2})\.(\d{2})\.(\d{4})/g, '$3.$2.$1'));

///////////////////////////////////////////////////////////
//Карманы по умолчанию в методе replace в JavaScript
//дана строка
let str56 = 'a1b2c3';
//Напишите регулярку, которая рядом с каждой цифрой напишет такую же.
console.log(str56.replace(/\d/g, "$&$&"));
//have string
let str57 = 'sss site.ru zzz site.com kkk';
//Замените домены на ссылки вида:
//<a href="http://site.ru">site.ru</a>
console.log(str57.replace(/[a-z]{4}\.[a-z]{2,3}/g, '<a href="http://$&">$&</a>'));

////////////////////////////////////////////////////////////
//Карманы в самой регулярке в JavaScript
let str58 = 'aaa bbb ccc xyz';
//find все подстроки, в которых есть три одинаковые буквы подряд.
console.log(str58.replace(/([a-z])\1\1/g, '!'));
let str59 = 'a aa aaa aaaa aaaaa';
//find  все подстроки, в которых есть две и более одинаковые буквы подряд.
console.log(str59.replace(/([a-z])\1+/g, '!'));
let str60 = 'aaa aaa bbb bbb ccc ddd';
//все подстроки, в которых есть два одинаковых слова подряд.
//??????????????????
console.log(str60.replace(/(([a-z])\1+)\2/g, '!'));

///////////////////////////////////////////////////////////////
//Позитивный и негативный просмотр в JavaScript
let str61 = 'func1() func2() func3()';
//Получите массив имен функций из строки.
console.log(str61.match(/[a-z]{4}\d(?=())/g));
let str62 = '<a href="" class="eee" id="zzz">';
//Получите массив имен атрибутов этого тега.
console.log(str62.match(/[a-z]+(?==")/g));

////////////////////////////////////////////////////////
//Коллбэк в методе replace в регулярках JavaScript
let str63 = '2 3 4 5';

console.log(str63.replace(/\d+/g, function (match) {
    return match ** 2;
}));

let str64 = '2+3= 4+5= 6+7=';
console.log(str64.replace(/(\d+)\+(\d+)=/g, function (match0, match1, match2) {
    return match0 + (+match1 + (+match2));
}));
